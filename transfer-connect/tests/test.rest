### Testing: route for bank server to send transfer information to TC
### Input: JSON file with transfer information
### Expected Output: JSON message of successful outcome
POST http://localhost:3002/api/bank/accrual-req
Authorization: {{$dotenv JWT_TOKEN_SECRET_TEST}}
Content-Type: application/json

{
    "memberId": "1567894821",
    "memberFirstName": "Aaron",
    "memberLastName": "Esdeeeff",
    "amount": 200,
    "referenceNumber": 2020080103,
    "partnerCode": "MSTB",
    "loyaltyProgram": "phone number lmayo"
}

### Testing: route for bank server to get information about previously sent transfer from TC
### Input: JSON file containing transfer id (id of collection in MongoDB)
### Output: JSON file with transfer information
POST http://localhost:3002/api/bank/accrual-update
Authorization: {{$dotenv JWT_TOKEN_SECRET_TEST}}
Content-Type: application/json

{
    "referenceNumber": 2022080101,
    "partnerCode": "DBSSG"
}

### Testing: route for bank server to get information about previously sent transfer from TC
### Input: JSON file containing transfer id (id of collection in MongoDB)
### Output: JSON file with transfer information
POST http://localhost:3002/api/bank/accrual-update
Authorization: {{$dotenv JWT_TOKEN_SECRET_TEST}}
Content-Type: application/json

{
    "referenceNumber": "all",
    "partnerCode": "DBSSG"
}

### Testing: route for bank server to get information about loyalty program
### Input: loyalty program id in the url
### Output: JSON file with loyalty program information
GET http://localhost:3002/api/program/info/GOPOINTS
Authorization: {{$dotenv JWT_TOKEN_SECRET_TEST}}

### Testing: route for bank server to get information about loyalty program
### Input: loyalty program id in the url
### Output: JSON file with loyalty program information
GET http://localhost:3002/api/program/info/all
Authorization: {{$dotenv JWT_TOKEN_SECRET_TEST}}

### Testing: route for bank server to get information about loyalty program
### Input: loyalty program id in the url
### Output: JSON file with loyalty program information
GET http://localhost:3002/api/program/info/GOPOINTSzx
Authorization: {{$dotenv JWT_TOKEN_SECRET_TEST}}

### Testing: route for bank server to validate loyalty points id, given program
### Input: program id, followed by loyalty points id in the url
### Output: JSON file true/false boolean value 
GET http://localhost:3002/api/program/validate/GOPOINTS/1234567890
Authorization: {{$dotenv JWT_TOKEN_SECRET_TEST}}

### Testing: route for bank server to validate loyalty points id, given program
### Input: program id, followed by loyalty points id in the url
### Output: JSON file true/false boolean value 
GET http://localhost:3002/api/program/validate/INDOMILES/1234567890
Authorization: {{$dotenv JWT_TOKEN_SECRET_TEST}}

### Testing: route for bank server to validate loyalty points id, given program
### Input: program id, followed by loyalty points id in the url
### Output: JSON file true/false boolean value 
GET http://localhost:3002/api/program/validate/EMINENTGUEST/123456789012
Authorization: {{$dotenv JWT_TOKEN_SECRET_TEST}}

### Testing: route for bank server to validate loyalty points id, given program
### Input: program id, followed by loyalty points id in the url
### Output: JSON file true/false boolean value 
GET http://localhost:3002/api/program/validate/QFLYER/1234567890
Authorization: {{$dotenv JWT_TOKEN_SECRET_TEST}}

### Testing: route for bank server to validate loyalty points id, given program
### Input: program id, followed by loyalty points id in the url
### Output: JSON file true/false boolean value 
GET http://localhost:3002/api/program/validate/CONRADCLUB/123456789
Authorization: {{$dotenv JWT_TOKEN_SECRET_TEST}}

### Testing: route for bank server to validate loyalty points id, given program
### Input: program id, followed by loyalty points id in the url
### Output: JSON file true/false boolean value 
GET http://localhost:3002/api/program/validate/MILLENIUMREWARDS/123456789L
Authorization: {{$dotenv JWT_TOKEN_SECRET_TEST}}

### Testing: (Fail due to bad Program ID) route for bank server to validate loyalty points id, given program
### Input: program id, followed by loyalty points id in the url
### Output: JSON file true/false boolean value 
GET http://localhost:3002/api/program/validate/DOESNTEXIST/123456789
Authorization: {{$dotenv JWT_TOKEN_SECRET_TEST}}

### Testing: (Fail due to bad Member ID) route for bank server to validate loyalty points id, given program
### Input: program id, followed by loyalty points id in the url
### Output: JSON file true/false boolean value 
GET http://localhost:3002/api/program/validate/CONRADCLUB/1234567891
Authorization: {{$dotenv JWT_TOKEN_SECRET_TEST}}